# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from jql import jql_pb2 as jql_dot_jql__pb2


class JQLStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListEntries = channel.unary_unary(
                '/jql.JQL/ListEntries',
                request_serializer=jql_dot_jql__pb2.ListEntriesRequest.SerializeToString,
                response_deserializer=jql_dot_jql__pb2.ListEntriesResponse.FromString,
                )
        self.GetEntry = channel.unary_unary(
                '/jql.JQL/GetEntry',
                request_serializer=jql_dot_jql__pb2.GetEntryRequest.SerializeToString,
                response_deserializer=jql_dot_jql__pb2.GetEntryResponse.FromString,
                )
        self.WriteEntry = channel.unary_unary(
                '/jql.JQL/WriteEntry',
                request_serializer=jql_dot_jql__pb2.WriteEntryRequest.SerializeToString,
                response_deserializer=jql_dot_jql__pb2.WriteEntryResponse.FromString,
                )
        self.DeleteEntry = channel.unary_unary(
                '/jql.JQL/DeleteEntry',
                request_serializer=jql_dot_jql__pb2.DeleteEntryRequest.SerializeToString,
                response_deserializer=jql_dot_jql__pb2.DeleteEntryResponse.FromString,
                )
        self.Persist = channel.unary_unary(
                '/jql.JQL/Persist',
                request_serializer=jql_dot_jql__pb2.PersistRequest.SerializeToString,
                response_deserializer=jql_dot_jql__pb2.PersistResponse.FromString,
                )


class JQLServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListEntries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteEntry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEntry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Persist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JQLServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListEntries': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEntries,
                    request_deserializer=jql_dot_jql__pb2.ListEntriesRequest.FromString,
                    response_serializer=jql_dot_jql__pb2.ListEntriesResponse.SerializeToString,
            ),
            'GetEntry': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntry,
                    request_deserializer=jql_dot_jql__pb2.GetEntryRequest.FromString,
                    response_serializer=jql_dot_jql__pb2.GetEntryResponse.SerializeToString,
            ),
            'WriteEntry': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteEntry,
                    request_deserializer=jql_dot_jql__pb2.WriteEntryRequest.FromString,
                    response_serializer=jql_dot_jql__pb2.WriteEntryResponse.SerializeToString,
            ),
            'DeleteEntry': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEntry,
                    request_deserializer=jql_dot_jql__pb2.DeleteEntryRequest.FromString,
                    response_serializer=jql_dot_jql__pb2.DeleteEntryResponse.SerializeToString,
            ),
            'Persist': grpc.unary_unary_rpc_method_handler(
                    servicer.Persist,
                    request_deserializer=jql_dot_jql__pb2.PersistRequest.FromString,
                    response_serializer=jql_dot_jql__pb2.PersistResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'jql.JQL', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class JQL(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListEntries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/jql.JQL/ListEntries',
            jql_dot_jql__pb2.ListEntriesRequest.SerializeToString,
            jql_dot_jql__pb2.ListEntriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEntry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/jql.JQL/GetEntry',
            jql_dot_jql__pb2.GetEntryRequest.SerializeToString,
            jql_dot_jql__pb2.GetEntryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteEntry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/jql.JQL/WriteEntry',
            jql_dot_jql__pb2.WriteEntryRequest.SerializeToString,
            jql_dot_jql__pb2.WriteEntryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteEntry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/jql.JQL/DeleteEntry',
            jql_dot_jql__pb2.DeleteEntryRequest.SerializeToString,
            jql_dot_jql__pb2.DeleteEntryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Persist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/jql.JQL/Persist',
            jql_dot_jql__pb2.PersistRequest.SerializeToString,
            jql_dot_jql__pb2.PersistResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
