#! /usr/local/bin/python3
"""
For jql time management schema

Macro will auto-jump your view to a given attention cycle
* by default goes to the current active cycle
* adding --pending will go to the current pending cycle
* adding --for <noun> will go to the cycle for a given noun (not implemented)
"""

import json
import sys


def find_active_root_cycle(snapshot):
    for pk, task in snapshot['tasks'].items():
        if task['Action'] == "Accomplish" and task[
                'Direct'] == "set goals" and task['Status'] == "Habitual":
            return pk


def find_pending_root_cycle(snapshot):
    for pk, task in snapshot['tasks'].items():
        if task['Action'] == "Accomplish" and task[
                'Direct'] == "set goals" and task['Status'] == "Pending":
            return pk


def main():
    iface = json.load(sys.stdin)
    snapshot = json.loads(iface["snapshot"])
    field = "Primary Goal"
    table = "tasks"
    if "--pending" in sys.argv:
        formatted = find_pending_root_cycle(snapshot)
    elif "--sources" in sys.argv:
        table = "nouns"
        field = "Relation"
        formatted = "Source"
    elif "--for" in sys.argv:
        raise NotImplementedError("--for flag not yet implemented")
    else:
        formatted = find_active_root_cycle(snapshot)
    current_view = iface["current_view"]
    current_view['table'] = table
    current_view['filter'] = {
        "field": field,
        "formatted": formatted,
    }
    json.dump(iface, sys.stdout)


if __name__ == "__main__":
    main()
