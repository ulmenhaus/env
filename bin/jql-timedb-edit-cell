#! /usr/local/bin/python3
"""
For jql concept management schema

Edit a given cell in jql timedb
"""

import os
import subprocess
import sys
import tempfile

from jql import jql_pb2, macro
from timedb import cycles, pks, schema


def _edit_content(content):
    tmpdir = os.path.join(os.getcwd(), "tmp")
    os.makedirs(tmpdir, exist_ok=True)
    with tempfile.NamedTemporaryFile(suffix=".md", delete=False,
                                     dir=tmpdir) as f:
        # a new line at the end makes editing in vim easier
        f.write((content + '\n\n').encode("utf-8"))
        fname = f.name
    call = [
        "tmux", "popup", "-h", "75%", "-w", "75%", "-E", "/usr/bin/vim", "-nw",
        "-q", fname
    ]
    subprocess.Popen(call).wait()
    with open(fname) as f:
        return f.read().strip()


def _edit_cell(dbms, table, pk, column):
    resp = dbms.GetRow(jql_pb2.GetRowRequest(table=table, pk=pk))
    cmap = {c.name: i for i, c in enumerate(resp.columns)}
    content = resp.row.entries[cmap[column]].formatted
    new_content = _edit_content(content)
    if new_content == content:
        return
    resp = dbms.WriteRow(
        jql_pb2.WriteRowRequest(
            table=table,
            pk=pk,
            fields={column: new_content},
            update_only=True,
        ))


def main():
    with macro.macro_interface(sys.stdin, sys.stdout) as iface:
        dbms = iface.get_dbms()
        table, pk = iface.get_primary_selection()
        _edit_cell(dbms, table, pk, iface.get_primary_column())


if __name__ == "__main__":
    main()
