// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: jql/jql.proto

package jqlpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntryType int32

const (
	EntryType_STRING   EntryType = 0
	EntryType_INT      EntryType = 1
	EntryType_DATE     EntryType = 2
	EntryType_ENUM     EntryType = 3
	EntryType_ID       EntryType = 4
	EntryType_TIME     EntryType = 5
	EntryType_MONEYAMT EntryType = 6
	EntryType_FOREIGN  EntryType = 7
	EntryType_FOREIGNS EntryType = 8
)

// Enum value maps for EntryType.
var (
	EntryType_name = map[int32]string{
		0: "STRING",
		1: "INT",
		2: "DATE",
		3: "ENUM",
		4: "ID",
		5: "TIME",
		6: "MONEYAMT",
		7: "FOREIGN",
		8: "FOREIGNS",
	}
	EntryType_value = map[string]int32{
		"STRING":   0,
		"INT":      1,
		"DATE":     2,
		"ENUM":     3,
		"ID":       4,
		"TIME":     5,
		"MONEYAMT": 6,
		"FOREIGN":  7,
		"FOREIGNS": 8,
	}
)

func (x EntryType) Enum() *EntryType {
	p := new(EntryType)
	*p = x
	return p
}

func (x EntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_jql_jql_proto_enumTypes[0].Descriptor()
}

func (EntryType) Type() protoreflect.EnumType {
	return &file_jql_jql_proto_enumTypes[0]
}

func (x EntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntryType.Descriptor instead.
func (EntryType) EnumDescriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{0}
}

type EqualMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EqualMatch) Reset() {
	*x = EqualMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EqualMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EqualMatch) ProtoMessage() {}

func (x *EqualMatch) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EqualMatch.ProtoReflect.Descriptor instead.
func (*EqualMatch) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{0}
}

func (x *EqualMatch) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type LessThanMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LessThanMatch) Reset() {
	*x = LessThanMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessThanMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessThanMatch) ProtoMessage() {}

func (x *LessThanMatch) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessThanMatch.ProtoReflect.Descriptor instead.
func (*LessThanMatch) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{1}
}

func (x *LessThanMatch) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GreaterThanMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GreaterThanMatch) Reset() {
	*x = GreaterThanMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GreaterThanMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GreaterThanMatch) ProtoMessage() {}

func (x *GreaterThanMatch) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GreaterThanMatch.ProtoReflect.Descriptor instead.
func (*GreaterThanMatch) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{2}
}

func (x *GreaterThanMatch) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type InMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *InMatch) Reset() {
	*x = InMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InMatch) ProtoMessage() {}

func (x *InMatch) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InMatch.ProtoReflect.Descriptor instead.
func (*InMatch) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{3}
}

func (x *InMatch) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type ContainsMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exact bool   `protobuf:"varint,1,opt,name=exact,proto3" json:"exact,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ContainsMatch) Reset() {
	*x = ContainsMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainsMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainsMatch) ProtoMessage() {}

func (x *ContainsMatch) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainsMatch.ProtoReflect.Descriptor instead.
func (*ContainsMatch) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{4}
}

func (x *ContainsMatch) GetExact() bool {
	if x != nil {
		return x.Exact
	}
	return false
}

func (x *ContainsMatch) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Negated bool   `protobuf:"varint,1,opt,name=negated,proto3" json:"negated,omitempty"`
	Column  string `protobuf:"bytes,2,opt,name=column,proto3" json:"column,omitempty"`
	// Types that are assignable to Match:
	//
	//	*Filter_EqualMatch
	//	*Filter_LessThanMatch
	//	*Filter_GreatherThanMatch
	//	*Filter_InMatch
	//	*Filter_ContainsMatch
	Match isFilter_Match `protobuf_oneof:"match"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{5}
}

func (x *Filter) GetNegated() bool {
	if x != nil {
		return x.Negated
	}
	return false
}

func (x *Filter) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (m *Filter) GetMatch() isFilter_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (x *Filter) GetEqualMatch() *EqualMatch {
	if x, ok := x.GetMatch().(*Filter_EqualMatch); ok {
		return x.EqualMatch
	}
	return nil
}

func (x *Filter) GetLessThanMatch() *LessThanMatch {
	if x, ok := x.GetMatch().(*Filter_LessThanMatch); ok {
		return x.LessThanMatch
	}
	return nil
}

func (x *Filter) GetGreatherThanMatch() *GreaterThanMatch {
	if x, ok := x.GetMatch().(*Filter_GreatherThanMatch); ok {
		return x.GreatherThanMatch
	}
	return nil
}

func (x *Filter) GetInMatch() *InMatch {
	if x, ok := x.GetMatch().(*Filter_InMatch); ok {
		return x.InMatch
	}
	return nil
}

func (x *Filter) GetContainsMatch() *ContainsMatch {
	if x, ok := x.GetMatch().(*Filter_ContainsMatch); ok {
		return x.ContainsMatch
	}
	return nil
}

type isFilter_Match interface {
	isFilter_Match()
}

type Filter_EqualMatch struct {
	EqualMatch *EqualMatch `protobuf:"bytes,3,opt,name=equal_match,json=equalMatch,proto3,oneof"`
}

type Filter_LessThanMatch struct {
	LessThanMatch *LessThanMatch `protobuf:"bytes,4,opt,name=less_than_match,json=lessThanMatch,proto3,oneof"`
}

type Filter_GreatherThanMatch struct {
	GreatherThanMatch *GreaterThanMatch `protobuf:"bytes,5,opt,name=greather_than_match,json=greatherThanMatch,proto3,oneof"`
}

type Filter_InMatch struct {
	InMatch *InMatch `protobuf:"bytes,6,opt,name=in_match,json=inMatch,proto3,oneof"`
}

type Filter_ContainsMatch struct {
	ContainsMatch *ContainsMatch `protobuf:"bytes,7,opt,name=contains_match,json=containsMatch,proto3,oneof"`
}

func (*Filter_EqualMatch) isFilter_Match() {}

func (*Filter_LessThanMatch) isFilter_Match() {}

func (*Filter_GreatherThanMatch) isFilter_Match() {}

func (*Filter_InMatch) isFilter_Match() {}

func (*Filter_ContainsMatch) isFilter_Match() {}

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requires []*Filter `protobuf:"bytes,1,rep,name=requires,proto3" json:"requires,omitempty"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{6}
}

func (x *Condition) GetRequires() []*Filter {
	if x != nil {
		return x.Requires
	}
	return nil
}

type ListRowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table string `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	// Use DNF for maximum expressibility. Filtering is an or clause
	// of and clauses made up of primitive filters.
	Conditions []*Condition `protobuf:"bytes,2,rep,name=conditions,proto3" json:"conditions,omitempty"`
	OrderBy    string       `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Dec        bool         `protobuf:"varint,4,opt,name=dec,proto3" json:"dec,omitempty"`
	Offset     uint32       `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit      uint32       `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListRowsRequest) Reset() {
	*x = ListRowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRowsRequest) ProtoMessage() {}

func (x *ListRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRowsRequest.ProtoReflect.Descriptor instead.
func (*ListRowsRequest) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{7}
}

func (x *ListRowsRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *ListRowsRequest) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *ListRowsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListRowsRequest) GetDec() bool {
	if x != nil {
		return x.Dec
	}
	return false
}

func (x *ListRowsRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListRowsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type      EntryType `protobuf:"varint,2,opt,name=type,proto3,enum=jql.EntryType" json:"type,omitempty"`
	MaxLength int32     `protobuf:"varint,3,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	Primary   bool      `protobuf:"varint,4,opt,name=primary,proto3" json:"primary,omitempty"`
}

func (x *Column) Reset() {
	*x = Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{8}
}

func (x *Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Column) GetType() EntryType {
	if x != nil {
		return x.Type
	}
	return EntryType_STRING
}

func (x *Column) GetMaxLength() int32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

func (x *Column) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

type Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Formatted string `protobuf:"bytes,1,opt,name=formatted,proto3" json:"formatted,omitempty"`
}

func (x *Entry) Reset() {
	*x = Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{9}
}

func (x *Entry) GetFormatted() string {
	if x != nil {
		return x.Formatted
	}
	return ""
}

type Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *Row) Reset() {
	*x = Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{10}
}

func (x *Row) GetEntries() []*Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ListRowsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []*Column `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	Rows    []*Row    `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	Total   uint32    `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	All     uint32    `protobuf:"varint,4,opt,name=all,proto3" json:"all,omitempty"`
}

func (x *ListRowsResponse) Reset() {
	*x = ListRowsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRowsResponse) ProtoMessage() {}

func (x *ListRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRowsResponse.ProtoReflect.Descriptor instead.
func (*ListRowsResponse) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{11}
}

func (x *ListRowsResponse) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *ListRowsResponse) GetRows() []*Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListRowsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRowsResponse) GetAll() uint32 {
	if x != nil {
		return x.All
	}
	return 0
}

type GetRowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table string `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Pk    string `protobuf:"bytes,2,opt,name=pk,proto3" json:"pk,omitempty"`
}

func (x *GetRowRequest) Reset() {
	*x = GetRowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRowRequest) ProtoMessage() {}

func (x *GetRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRowRequest.ProtoReflect.Descriptor instead.
func (*GetRowRequest) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{12}
}

func (x *GetRowRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *GetRowRequest) GetPk() string {
	if x != nil {
		return x.Pk
	}
	return ""
}

type GetRowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []*Column `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	Row     *Row      `protobuf:"bytes,2,opt,name=row,proto3" json:"row,omitempty"`
}

func (x *GetRowResponse) Reset() {
	*x = GetRowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRowResponse) ProtoMessage() {}

func (x *GetRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRowResponse.ProtoReflect.Descriptor instead.
func (*GetRowResponse) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{13}
}

func (x *GetRowResponse) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *GetRowResponse) GetRow() *Row {
	if x != nil {
		return x.Row
	}
	return nil
}

type WriteRowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table      string            `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Pk         string            `protobuf:"bytes,2,opt,name=pk,proto3" json:"pk,omitempty"`
	Fields     map[string]string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UpdateOnly bool              `protobuf:"varint,4,opt,name=update_only,json=updateOnly,proto3" json:"update_only,omitempty"`
	InsertOnly bool              `protobuf:"varint,5,opt,name=insert_only,json=insertOnly,proto3" json:"insert_only,omitempty"`
}

func (x *WriteRowRequest) Reset() {
	*x = WriteRowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRowRequest) ProtoMessage() {}

func (x *WriteRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRowRequest.ProtoReflect.Descriptor instead.
func (*WriteRowRequest) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{14}
}

func (x *WriteRowRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *WriteRowRequest) GetPk() string {
	if x != nil {
		return x.Pk
	}
	return ""
}

func (x *WriteRowRequest) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *WriteRowRequest) GetUpdateOnly() bool {
	if x != nil {
		return x.UpdateOnly
	}
	return false
}

func (x *WriteRowRequest) GetInsertOnly() bool {
	if x != nil {
		return x.InsertOnly
	}
	return false
}

type WriteRowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WriteRowResponse) Reset() {
	*x = WriteRowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRowResponse) ProtoMessage() {}

func (x *WriteRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRowResponse.ProtoReflect.Descriptor instead.
func (*WriteRowResponse) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{15}
}

type IncrementEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table  string `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Pk     string `protobuf:"bytes,2,opt,name=pk,proto3" json:"pk,omitempty"`
	Column string `protobuf:"bytes,3,opt,name=column,proto3" json:"column,omitempty"`
	Amount int32  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *IncrementEntryRequest) Reset() {
	*x = IncrementEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncrementEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementEntryRequest) ProtoMessage() {}

func (x *IncrementEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementEntryRequest.ProtoReflect.Descriptor instead.
func (*IncrementEntryRequest) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{16}
}

func (x *IncrementEntryRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *IncrementEntryRequest) GetPk() string {
	if x != nil {
		return x.Pk
	}
	return ""
}

func (x *IncrementEntryRequest) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *IncrementEntryRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type IncrementEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IncrementEntryResponse) Reset() {
	*x = IncrementEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncrementEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementEntryResponse) ProtoMessage() {}

func (x *IncrementEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementEntryResponse.ProtoReflect.Descriptor instead.
func (*IncrementEntryResponse) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{17}
}

type DeleteRowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table string `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Pk    string `protobuf:"bytes,2,opt,name=pk,proto3" json:"pk,omitempty"`
}

func (x *DeleteRowRequest) Reset() {
	*x = DeleteRowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRowRequest) ProtoMessage() {}

func (x *DeleteRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRowRequest.ProtoReflect.Descriptor instead.
func (*DeleteRowRequest) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteRowRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *DeleteRowRequest) GetPk() string {
	if x != nil {
		return x.Pk
	}
	return ""
}

type DeleteRowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRowResponse) Reset() {
	*x = DeleteRowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRowResponse) ProtoMessage() {}

func (x *DeleteRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRowResponse.ProtoReflect.Descriptor instead.
func (*DeleteRowResponse) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{19}
}

type PersistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PersistRequest) Reset() {
	*x = PersistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersistRequest) ProtoMessage() {}

func (x *PersistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersistRequest.ProtoReflect.Descriptor instead.
func (*PersistRequest) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{20}
}

type PersistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PersistResponse) Reset() {
	*x = PersistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jql_jql_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersistResponse) ProtoMessage() {}

func (x *PersistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jql_jql_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersistResponse.ProtoReflect.Descriptor instead.
func (*PersistResponse) Descriptor() ([]byte, []int) {
	return file_jql_jql_proto_rawDescGZIP(), []int{21}
}

var File_jql_jql_proto protoreflect.FileDescriptor

var file_jql_jql_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6a, 0x71, 0x6c, 0x2f, 0x6a, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x6a, 0x71, 0x6c, 0x22, 0x22, 0x0a, 0x0a, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x4c, 0x65, 0x73, 0x73,
	0x54, 0x68, 0x61, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x28, 0x0a, 0x10, 0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x21, 0x0a, 0x07, 0x49, 0x6e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x3b, 0x0a, 0x0d,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x78, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x78,
	0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe6, 0x02, 0x0a, 0x06, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x32, 0x0a, 0x0b, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x5f,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6a, 0x71,
	0x6c, 0x2e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0a,
	0x65, 0x71, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x3c, 0x0a, 0x0f, 0x6c, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68,
	0x61, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x65, 0x73, 0x73, 0x54,
	0x68, 0x61, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x47, 0x0a, 0x13, 0x67, 0x72, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x47, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x11,
	0x67, 0x72, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x29, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x3b, 0x0a, 0x0e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x07, 0x0a, 0x05, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x22, 0x34, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x64, 0x65, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x79, 0x0a,
	0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6a, 0x71, 0x6c, 0x2e,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x25, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x22,
	0x2b, 0x0a, 0x03, 0x52, 0x6f, 0x77, 0x12, 0x24, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x7f, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x52,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x22, 0x35, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x70, 0x6b, 0x22, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x1a, 0x0a,
	0x03, 0x72, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x71, 0x6c,
	0x2e, 0x52, 0x6f, 0x77, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x22, 0xee, 0x01, 0x0a, 0x0f, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x70, 0x6b, 0x12, 0x38, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x1a,
	0x39, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x12, 0x0a, 0x10, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6d,
	0x0a, 0x15, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x18, 0x0a,
	0x16, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70,
	0x6b, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x6f, 0x0a, 0x09, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49,
	0x4e, 0x47, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x4e, 0x55, 0x4d, 0x10,
	0x03, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x44, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x49, 0x4d,
	0x45, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x4f, 0x4e, 0x45, 0x59, 0x41, 0x4d, 0x54, 0x10,
	0x06, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4f, 0x52, 0x45, 0x49, 0x47, 0x4e, 0x10, 0x07, 0x12, 0x0c,
	0x0a, 0x08, 0x46, 0x4f, 0x52, 0x45, 0x49, 0x47, 0x4e, 0x53, 0x10, 0x08, 0x32, 0xe7, 0x02, 0x0a,
	0x03, 0x4a, 0x51, 0x4c, 0x12, 0x37, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x77, 0x73,
	0x12, 0x14, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x77, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x06, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x77, 0x12, 0x12, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6a, 0x71,
	0x6c, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x08, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x12, 0x14, 0x2e, 0x6a,
	0x71, 0x6c, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x6f,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x12, 0x15, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x6a, 0x71, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x6a, 0x71,
	0x6c, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x6a, 0x71, 0x6c, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x6a, 0x71, 0x6c, 0x2f, 0x6a, 0x71,
	0x6c, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jql_jql_proto_rawDescOnce sync.Once
	file_jql_jql_proto_rawDescData = file_jql_jql_proto_rawDesc
)

func file_jql_jql_proto_rawDescGZIP() []byte {
	file_jql_jql_proto_rawDescOnce.Do(func() {
		file_jql_jql_proto_rawDescData = protoimpl.X.CompressGZIP(file_jql_jql_proto_rawDescData)
	})
	return file_jql_jql_proto_rawDescData
}

var file_jql_jql_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_jql_jql_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_jql_jql_proto_goTypes = []interface{}{
	(EntryType)(0),                 // 0: jql.EntryType
	(*EqualMatch)(nil),             // 1: jql.EqualMatch
	(*LessThanMatch)(nil),          // 2: jql.LessThanMatch
	(*GreaterThanMatch)(nil),       // 3: jql.GreaterThanMatch
	(*InMatch)(nil),                // 4: jql.InMatch
	(*ContainsMatch)(nil),          // 5: jql.ContainsMatch
	(*Filter)(nil),                 // 6: jql.Filter
	(*Condition)(nil),              // 7: jql.Condition
	(*ListRowsRequest)(nil),        // 8: jql.ListRowsRequest
	(*Column)(nil),                 // 9: jql.Column
	(*Entry)(nil),                  // 10: jql.Entry
	(*Row)(nil),                    // 11: jql.Row
	(*ListRowsResponse)(nil),       // 12: jql.ListRowsResponse
	(*GetRowRequest)(nil),          // 13: jql.GetRowRequest
	(*GetRowResponse)(nil),         // 14: jql.GetRowResponse
	(*WriteRowRequest)(nil),        // 15: jql.WriteRowRequest
	(*WriteRowResponse)(nil),       // 16: jql.WriteRowResponse
	(*IncrementEntryRequest)(nil),  // 17: jql.IncrementEntryRequest
	(*IncrementEntryResponse)(nil), // 18: jql.IncrementEntryResponse
	(*DeleteRowRequest)(nil),       // 19: jql.DeleteRowRequest
	(*DeleteRowResponse)(nil),      // 20: jql.DeleteRowResponse
	(*PersistRequest)(nil),         // 21: jql.PersistRequest
	(*PersistResponse)(nil),        // 22: jql.PersistResponse
	nil,                            // 23: jql.WriteRowRequest.FieldsEntry
}
var file_jql_jql_proto_depIdxs = []int32{
	1,  // 0: jql.Filter.equal_match:type_name -> jql.EqualMatch
	2,  // 1: jql.Filter.less_than_match:type_name -> jql.LessThanMatch
	3,  // 2: jql.Filter.greather_than_match:type_name -> jql.GreaterThanMatch
	4,  // 3: jql.Filter.in_match:type_name -> jql.InMatch
	5,  // 4: jql.Filter.contains_match:type_name -> jql.ContainsMatch
	6,  // 5: jql.Condition.requires:type_name -> jql.Filter
	7,  // 6: jql.ListRowsRequest.conditions:type_name -> jql.Condition
	0,  // 7: jql.Column.type:type_name -> jql.EntryType
	10, // 8: jql.Row.entries:type_name -> jql.Entry
	9,  // 9: jql.ListRowsResponse.columns:type_name -> jql.Column
	11, // 10: jql.ListRowsResponse.rows:type_name -> jql.Row
	9,  // 11: jql.GetRowResponse.columns:type_name -> jql.Column
	11, // 12: jql.GetRowResponse.row:type_name -> jql.Row
	23, // 13: jql.WriteRowRequest.fields:type_name -> jql.WriteRowRequest.FieldsEntry
	8,  // 14: jql.JQL.ListRows:input_type -> jql.ListRowsRequest
	13, // 15: jql.JQL.GetRow:input_type -> jql.GetRowRequest
	15, // 16: jql.JQL.WriteRow:input_type -> jql.WriteRowRequest
	19, // 17: jql.JQL.DeleteRow:input_type -> jql.DeleteRowRequest
	17, // 18: jql.JQL.IncrementEntry:input_type -> jql.IncrementEntryRequest
	21, // 19: jql.JQL.Persist:input_type -> jql.PersistRequest
	12, // 20: jql.JQL.ListRows:output_type -> jql.ListRowsResponse
	14, // 21: jql.JQL.GetRow:output_type -> jql.GetRowResponse
	16, // 22: jql.JQL.WriteRow:output_type -> jql.WriteRowResponse
	20, // 23: jql.JQL.DeleteRow:output_type -> jql.DeleteRowResponse
	18, // 24: jql.JQL.IncrementEntry:output_type -> jql.IncrementEntryResponse
	22, // 25: jql.JQL.Persist:output_type -> jql.PersistResponse
	20, // [20:26] is the sub-list for method output_type
	14, // [14:20] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_jql_jql_proto_init() }
func file_jql_jql_proto_init() {
	if File_jql_jql_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jql_jql_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EqualMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessThanMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GreaterThanMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainsMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRowsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteRowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteRowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncrementEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncrementEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jql_jql_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_jql_jql_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Filter_EqualMatch)(nil),
		(*Filter_LessThanMatch)(nil),
		(*Filter_GreatherThanMatch)(nil),
		(*Filter_InMatch)(nil),
		(*Filter_ContainsMatch)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jql_jql_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jql_jql_proto_goTypes,
		DependencyIndexes: file_jql_jql_proto_depIdxs,
		EnumInfos:         file_jql_jql_proto_enumTypes,
		MessageInfos:      file_jql_jql_proto_msgTypes,
	}.Build()
	File_jql_jql_proto = out.File
	file_jql_jql_proto_rawDesc = nil
	file_jql_jql_proto_goTypes = nil
	file_jql_jql_proto_depIdxs = nil
}
